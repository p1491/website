trigger:
  branches:
    include:
    - main

jobs:
  - job: 'CreatingSelfHostedAgent'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: TerraformInstaller@0
        displayName: "Install Terraform"
        inputs:
          terraformVersion: '1.5.3'

      - checkout: self
        displayName: 'Checkout repository'
 
      - task: TerraformTaskV4@4
        displayName: 'Terraform Init'
        inputs:
          command: 'init'
          workingDirectory: '$(Build.SourcesDirectory)'
          backendType: 'azurerm'
          ensureBackend: true
          backendServiceArm: 'azurerm'
          backendAzureRmResourceGroupName: '$(TerraformBackend.ResourceGroup)'
          backendAzureRmStorageAccountName: '$(TerraformBackend.StorageAccount)'
          backendAzureRmContainerName: '$(TerraformBackend.ContainerName)'
          backendAzureRmKey: 'terraform.tfstate'

      - task: TerraformTaskV4@4
        displayName: 'Terraform Validate'
        inputs:
          command: 'validate'
          workingDirectory: '$(Build.SourcesDirectory)'
          environmentServiceNameAzureRM: 'azurerm'

      - task: TerraformTaskV4@4
        displayName: 'Terraform Plan'
        inputs:
          command: 'plan'
          workingDirectory: '$(Build.SourcesDirectory)'
          environmentServiceNameAzureRM: 'azurerm'
       
      - task: TerraformTaskV4@4
        name: terraformApply
        displayName: 'Terraform Apply'
        inputs:
          command: 'apply'
          workingDirectory: '$(Build.SourcesDirectory)'
          environmentServiceNameAzureRM: 'azurerm'
          commandOptions: '-auto-approve'

      - task: CmdLine@2
        displayName: 'Installing Ansible'
        inputs:
          script: |
            sudo apt update -y
            sudo apt install software-properties-common
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible -y
      
      - task: CmdLine@2
        displayName: 'Exchanging SSH keys & Add Hosts entry'
        inputs: 
          script: |
            IPADDRESS=$(terraform output -raw public_ip_address)
            HOST=$(terraform output -raw hostname)
            USERNAME=$(terraform output -raw username)
            PRIVATE_KEY=$(terraform output -raw private-ssh-key)
            PUBLIC_KEY=$(terraform output -raw public-ssh-key)
            sudo -- sh -c -e "echo '$IPADDRESS\t$HOST\t$USERNAME'"
            sudo -- sh -c -e "echo '$IPADDRESS\t$HOST' >> /etc/hosts"      
            ansible localhost -m shell -a "ssh-keygen -q -b 2048 -t rsa -N '' -f ~/.ssh/id_rsa creates='~/.ssh/id_rsa'"
            ansible localhost -m shell -a "echo '$PRIVATE_KEY' > ~/.ssh/vm-id-rsa"
            ansible localhost -m shell -a "echo '$PUBLIC_KEY'"
            ansible localhost -m shell -a "chmod 700 ~/.ssh/vm-id-rsa"
            ansible localhost -m shell -a "ls -lrt  ~/.ssh/*id*"
            ansible-playbook $(Build.SourcesDirectory)/ansible/ssh-copy.yml -i $(Build.SourcesDirectory)/ansible/inventory.txt --private-key=~/.ssh/vm-id-rsa
    
      - task: Ansible@0
        displayName: 'Adding VM to Agent and Deployment pool'
        inputs:
          ansibleInterface: 'agentMachine'
          playbookPathOnAgentMachine: '$(Build.SourcesDirectory)/ansible/playbook.yml'
          inventoriesAgentMachine: 'file'
          inventoryFileOnAgentMachine: '$(Build.SourcesDirectory)/ansible/inventory.txt'
          args: '--extra-vars="vsts_agent_user=ansible vsts_accountname=Mamtha1689831165865 vsts_poolname=Dev vsts_accesstoken=cv43377qvenikzolb53ml4pruvlkqadki3oubilsd7j2yq2d7qlq"'

  - job: 'CreatingK8AndRegistry'
    pool:
      name: Dev
    steps:
      - task: CmdLine@2
        displayName: 'Install Kubectl'
        inputs:
          script: |
              sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              sudo chmod a+x kubectl
              sudo cp kubectl /usr/bin
    dependsOn: CreatingSelfHostedAgent