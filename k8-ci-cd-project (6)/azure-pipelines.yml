# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pool:
  name: Dev

stages:
  - stage: kubereg
    jobs:
    - job: kubereg
      continueOnError: false
      steps:
      - task: CmdLine@2
        displayName: Run Maven
        inputs:
          script: |
             mvn clean install -DskipTests

      - task: CopyPublishBuildArtifacts@1
        displayName: Publish Artifact
        inputs:
           CopyRoot: '$(Build.SourcesDirectory)/target'
           Contents: '*.jar'
           ArtifactName: 'drop'
           ArtifactType: 'Container'
           
         
      - task: DownloadPipelineArtifact@2
        inputs:
            buildType: 'current'
            artifactName: 'drop'
            targetPath: '$(Build.SourcesDirectory)'
        
         
      - task: DockerCompose@0
        displayName: Image Build
        inputs:
           containerregistrytype: 'Container Registry'
           dockerRegistryEndpoint: 'azureregistrytest'
           dockerComposeFile: 'compose.yml'
           projectName: 
           qualifyImageNames: false
           action: 'Run a Docker Compose command'
           dockerComposeCommand: 'build'
        
      - task: DockerCompose@0
        displayName: Image Push
        inputs:
           containerregistrytype: 'Container Registry'
           dockerRegistryEndpoint: 'azureregistrytest'
           dockerComposeFile: 'compose.yml'
           projectName: 
           qualifyImageNames: false
           action: 'Run a Docker Compose command'
           dockerComposeCommand: 'push'
      - task: KubernetesManifest@1
        inputs:
         action: 'createSecret'
         connectionType: 'kubernetesServiceConnection'
         kubernetesServiceConnection: 'kubetest'
         secretType: 'dockerRegistry'
         secretName: 'testregauth'
         dockerRegistryEndpoint: 'azureregistrytest'
      
      - task: KubernetesManifest@1
        inputs:
         action: 'deploy'
         connectionType: 'kubernetesServiceConnection'
         kubernetesServiceConnection: 'kubetest'
         manifests: $(Build.SourcesDirectory)/manifests/*
         containers: |
              testreg14.azurecr.io/testreg14:frontend
              testreg14.azurecr.io/testreg14:backend
         imagePullSecrets: 'testregauth'

